// source: query.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.query.QueryComplete', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.RequestCase', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.RequestCase', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.query.QueryRequest', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.query.QueryResponse', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.query.QuerySubscription', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.query.QueryUpdate', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.RequestCase', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.ResponseCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.oneofGroups_);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.displayName = 'proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.oneofGroups_);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.displayName = 'proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.query.QueryComplete = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.query.QueryComplete, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.query.QueryComplete.displayName = 'proto.io.axoniq.axonserver.grpc.query.QueryComplete';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.axoniq.axonserver.grpc.query.QueryRequest.repeatedFields_, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.query.QueryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.query.QueryRequest.displayName = 'proto.io.axoniq.axonserver.grpc.query.QueryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.axoniq.axonserver.grpc.query.QueryResponse.repeatedFields_, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.query.QueryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.query.QueryResponse.displayName = 'proto.io.axoniq.axonserver.grpc.query.QueryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.displayName = 'proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.query.QueryUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.query.QueryUpdate.displayName = 'proto.io.axoniq.axonserver.grpc.query.QueryUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.displayName = 'proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.displayName = 'proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.oneofGroups_);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.displayName = 'proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.oneofGroups_);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.displayName = 'proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.query.QuerySubscription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.query.QuerySubscription.displayName = 'proto.io.axoniq.axonserver.grpc.query.QuerySubscription';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.oneofGroups_ = [[1,2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.RequestCase = {
  REQUEST_NOT_SET: 0,
  SUBSCRIBE: 1,
  UNSUBSCRIBE: 2,
  FLOW_CONTROL: 3,
  QUERY_RESPONSE: 4,
  QUERY_COMPLETE: 5,
  SUBSCRIPTION_QUERY_RESPONSE: 6,
  ACK: 7
};

/**
 * @return {proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.RequestCase}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.getRequestCase = function() {
  return /** @type {proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.RequestCase} */(jspb.Message.computeOneofCase(this, proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.toObject = function(includeInstance, msg) {
  var f, obj = {
    subscribe: (f = msg.getSubscribe()) && proto.io.axoniq.axonserver.grpc.query.QuerySubscription.toObject(includeInstance, f),
    unsubscribe: (f = msg.getUnsubscribe()) && proto.io.axoniq.axonserver.grpc.query.QuerySubscription.toObject(includeInstance, f),
    flowControl: (f = msg.getFlowControl()) && common_pb.FlowControl.toObject(includeInstance, f),
    queryResponse: (f = msg.getQueryResponse()) && proto.io.axoniq.axonserver.grpc.query.QueryResponse.toObject(includeInstance, f),
    queryComplete: (f = msg.getQueryComplete()) && proto.io.axoniq.axonserver.grpc.query.QueryComplete.toObject(includeInstance, f),
    subscriptionQueryResponse: (f = msg.getSubscriptionQueryResponse()) && proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.toObject(includeInstance, f),
    ack: (f = msg.getAck()) && common_pb.InstructionAck.toObject(includeInstance, f),
    instructionId: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound;
  return proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.axoniq.axonserver.grpc.query.QuerySubscription;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.query.QuerySubscription.deserializeBinaryFromReader);
      msg.setSubscribe(value);
      break;
    case 2:
      var value = new proto.io.axoniq.axonserver.grpc.query.QuerySubscription;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.query.QuerySubscription.deserializeBinaryFromReader);
      msg.setUnsubscribe(value);
      break;
    case 3:
      var value = new common_pb.FlowControl;
      reader.readMessage(value,common_pb.FlowControl.deserializeBinaryFromReader);
      msg.setFlowControl(value);
      break;
    case 4:
      var value = new proto.io.axoniq.axonserver.grpc.query.QueryResponse;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.query.QueryResponse.deserializeBinaryFromReader);
      msg.setQueryResponse(value);
      break;
    case 5:
      var value = new proto.io.axoniq.axonserver.grpc.query.QueryComplete;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.query.QueryComplete.deserializeBinaryFromReader);
      msg.setQueryComplete(value);
      break;
    case 6:
      var value = new proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.deserializeBinaryFromReader);
      msg.setSubscriptionQueryResponse(value);
      break;
    case 7:
      var value = new common_pb.InstructionAck;
      reader.readMessage(value,common_pb.InstructionAck.deserializeBinaryFromReader);
      msg.setAck(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstructionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubscribe();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.axoniq.axonserver.grpc.query.QuerySubscription.serializeBinaryToWriter
    );
  }
  f = message.getUnsubscribe();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.axoniq.axonserver.grpc.query.QuerySubscription.serializeBinaryToWriter
    );
  }
  f = message.getFlowControl();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_pb.FlowControl.serializeBinaryToWriter
    );
  }
  f = message.getQueryResponse();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.axoniq.axonserver.grpc.query.QueryResponse.serializeBinaryToWriter
    );
  }
  f = message.getQueryComplete();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.axoniq.axonserver.grpc.query.QueryComplete.serializeBinaryToWriter
    );
  }
  f = message.getSubscriptionQueryResponse();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.serializeBinaryToWriter
    );
  }
  f = message.getAck();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_pb.InstructionAck.serializeBinaryToWriter
    );
  }
  f = message.getInstructionId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional QuerySubscription subscribe = 1;
 * @return {?proto.io.axoniq.axonserver.grpc.query.QuerySubscription}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.getSubscribe = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.query.QuerySubscription} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.query.QuerySubscription, 1));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.query.QuerySubscription|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.setSubscribe = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.clearSubscribe = function() {
  return this.setSubscribe(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.hasSubscribe = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional QuerySubscription unsubscribe = 2;
 * @return {?proto.io.axoniq.axonserver.grpc.query.QuerySubscription}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.getUnsubscribe = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.query.QuerySubscription} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.query.QuerySubscription, 2));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.query.QuerySubscription|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.setUnsubscribe = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.clearUnsubscribe = function() {
  return this.setUnsubscribe(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.hasUnsubscribe = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional io.axoniq.axonserver.grpc.FlowControl flow_control = 3;
 * @return {?proto.io.axoniq.axonserver.grpc.FlowControl}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.getFlowControl = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.FlowControl} */ (
    jspb.Message.getWrapperField(this, common_pb.FlowControl, 3));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.FlowControl|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.setFlowControl = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.clearFlowControl = function() {
  return this.setFlowControl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.hasFlowControl = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional QueryResponse query_response = 4;
 * @return {?proto.io.axoniq.axonserver.grpc.query.QueryResponse}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.getQueryResponse = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.query.QueryResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.query.QueryResponse, 4));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.query.QueryResponse|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.setQueryResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.clearQueryResponse = function() {
  return this.setQueryResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.hasQueryResponse = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional QueryComplete query_complete = 5;
 * @return {?proto.io.axoniq.axonserver.grpc.query.QueryComplete}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.getQueryComplete = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.query.QueryComplete} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.query.QueryComplete, 5));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.query.QueryComplete|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.setQueryComplete = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.clearQueryComplete = function() {
  return this.setQueryComplete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.hasQueryComplete = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional SubscriptionQueryResponse subscription_query_response = 6;
 * @return {?proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.getSubscriptionQueryResponse = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse, 6));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.setSubscriptionQueryResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.clearSubscriptionQueryResponse = function() {
  return this.setSubscriptionQueryResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.hasSubscriptionQueryResponse = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional io.axoniq.axonserver.grpc.InstructionAck ack = 7;
 * @return {?proto.io.axoniq.axonserver.grpc.InstructionAck}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.getAck = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.InstructionAck} */ (
    jspb.Message.getWrapperField(this, common_pb.InstructionAck, 7));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.InstructionAck|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.setAck = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.clearAck = function() {
  return this.setAck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.hasAck = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string instruction_id = 8;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.getInstructionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderOutbound.prototype.setInstructionId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.RequestCase = {
  REQUEST_NOT_SET: 0,
  ACK: 1,
  QUERY: 2,
  SUBSCRIPTION_QUERY_REQUEST: 3
};

/**
 * @return {proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.RequestCase}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.getRequestCase = function() {
  return /** @type {proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.RequestCase} */(jspb.Message.computeOneofCase(this, proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.toObject = function(includeInstance, msg) {
  var f, obj = {
    ack: (f = msg.getAck()) && common_pb.InstructionAck.toObject(includeInstance, f),
    query: (f = msg.getQuery()) && proto.io.axoniq.axonserver.grpc.query.QueryRequest.toObject(includeInstance, f),
    subscriptionQueryRequest: (f = msg.getSubscriptionQueryRequest()) && proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.toObject(includeInstance, f),
    instructionId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound;
  return proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.InstructionAck;
      reader.readMessage(value,common_pb.InstructionAck.deserializeBinaryFromReader);
      msg.setAck(value);
      break;
    case 2:
      var value = new proto.io.axoniq.axonserver.grpc.query.QueryRequest;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.query.QueryRequest.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 3:
      var value = new proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.deserializeBinaryFromReader);
      msg.setSubscriptionQueryRequest(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstructionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAck();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.InstructionAck.serializeBinaryToWriter
    );
  }
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.axoniq.axonserver.grpc.query.QueryRequest.serializeBinaryToWriter
    );
  }
  f = message.getSubscriptionQueryRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.serializeBinaryToWriter
    );
  }
  f = message.getInstructionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional io.axoniq.axonserver.grpc.InstructionAck ack = 1;
 * @return {?proto.io.axoniq.axonserver.grpc.InstructionAck}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.getAck = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.InstructionAck} */ (
    jspb.Message.getWrapperField(this, common_pb.InstructionAck, 1));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.InstructionAck|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.setAck = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.clearAck = function() {
  return this.setAck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.hasAck = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional QueryRequest query = 2;
 * @return {?proto.io.axoniq.axonserver.grpc.query.QueryRequest}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.getQuery = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.query.QueryRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.query.QueryRequest, 2));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.query.QueryRequest|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.setQuery = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SubscriptionQueryRequest subscription_query_request = 3;
 * @return {?proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.getSubscriptionQueryRequest = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest, 3));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.setSubscriptionQueryRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.clearSubscriptionQueryRequest = function() {
  return this.setSubscriptionQueryRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.hasSubscriptionQueryRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string instruction_id = 4;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.getInstructionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryProviderInbound.prototype.setInstructionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.query.QueryComplete.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.query.QueryComplete.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryComplete} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QueryComplete.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requestId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryComplete}
 */
proto.io.axoniq.axonserver.grpc.query.QueryComplete.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.query.QueryComplete;
  return proto.io.axoniq.axonserver.grpc.query.QueryComplete.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryComplete} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryComplete}
 */
proto.io.axoniq.axonserver.grpc.query.QueryComplete.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.query.QueryComplete.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.query.QueryComplete.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryComplete} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QueryComplete.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string message_id = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryComplete.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryComplete} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryComplete.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string request_id = 2;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryComplete.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryComplete} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryComplete.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.query.QueryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageIdentifier: jspb.Message.getFieldWithDefault(msg, 1, ""),
    query: jspb.Message.getFieldWithDefault(msg, 2, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    payload: (f = msg.getPayload()) && common_pb.SerializedObject.toObject(includeInstance, f),
    metaDataMap: (f = msg.getMetaDataMap()) ? f.toObject(includeInstance, proto.io.axoniq.axonserver.grpc.MetaDataValue.toObject) : [],
    responseType: (f = msg.getResponseType()) && common_pb.SerializedObject.toObject(includeInstance, f),
    processingInstructionsList: jspb.Message.toObjectList(msg.getProcessingInstructionsList(),
    common_pb.ProcessingInstruction.toObject, includeInstance),
    clientId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    componentName: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryRequest}
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.query.QueryRequest;
  return proto.io.axoniq.axonserver.grpc.query.QueryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryRequest}
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 4:
      var value = new common_pb.SerializedObject;
      reader.readMessage(value,common_pb.SerializedObject.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    case 5:
      var value = msg.getMetaDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.io.axoniq.axonserver.grpc.MetaDataValue.deserializeBinaryFromReader, "", new proto.io.axoniq.axonserver.grpc.MetaDataValue());
         });
      break;
    case 6:
      var value = new common_pb.SerializedObject;
      reader.readMessage(value,common_pb.SerializedObject.deserializeBinaryFromReader);
      msg.setResponseType(value);
      break;
    case 7:
      var value = new common_pb.ProcessingInstruction;
      reader.readMessage(value,common_pb.ProcessingInstruction.deserializeBinaryFromReader);
      msg.addProcessingInstructions(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.query.QueryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageIdentifier();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.SerializedObject.serializeBinaryToWriter
    );
  }
  f = message.getMetaDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.io.axoniq.axonserver.grpc.MetaDataValue.serializeBinaryToWriter);
  }
  f = message.getResponseType();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_pb.SerializedObject.serializeBinaryToWriter
    );
  }
  f = message.getProcessingInstructionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      common_pb.ProcessingInstruction.serializeBinaryToWriter
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getComponentName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string message_identifier = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.getMessageIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.setMessageIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string query = 2;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 timestamp = 3;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional io.axoniq.axonserver.grpc.SerializedObject payload = 4;
 * @return {?proto.io.axoniq.axonserver.grpc.SerializedObject}
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.getPayload = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.SerializedObject} */ (
    jspb.Message.getWrapperField(this, common_pb.SerializedObject, 4));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.SerializedObject|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryRequest} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * map<string, io.axoniq.axonserver.grpc.MetaDataValue> meta_data = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.io.axoniq.axonserver.grpc.MetaDataValue>}
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.getMetaDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.io.axoniq.axonserver.grpc.MetaDataValue>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.io.axoniq.axonserver.grpc.MetaDataValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.clearMetaDataMap = function() {
  this.getMetaDataMap().clear();
  return this;};


/**
 * optional io.axoniq.axonserver.grpc.SerializedObject response_type = 6;
 * @return {?proto.io.axoniq.axonserver.grpc.SerializedObject}
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.getResponseType = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.SerializedObject} */ (
    jspb.Message.getWrapperField(this, common_pb.SerializedObject, 6));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.SerializedObject|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryRequest} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.setResponseType = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.clearResponseType = function() {
  return this.setResponseType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.hasResponseType = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated io.axoniq.axonserver.grpc.ProcessingInstruction processing_instructions = 7;
 * @return {!Array<!proto.io.axoniq.axonserver.grpc.ProcessingInstruction>}
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.getProcessingInstructionsList = function() {
  return /** @type{!Array<!proto.io.axoniq.axonserver.grpc.ProcessingInstruction>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.ProcessingInstruction, 7));
};


/**
 * @param {!Array<!proto.io.axoniq.axonserver.grpc.ProcessingInstruction>} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryRequest} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.setProcessingInstructionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.io.axoniq.axonserver.grpc.ProcessingInstruction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.axoniq.axonserver.grpc.ProcessingInstruction}
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.addProcessingInstructions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.io.axoniq.axonserver.grpc.ProcessingInstruction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.clearProcessingInstructionsList = function() {
  return this.setProcessingInstructionsList([]);
};


/**
 * optional string client_id = 8;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string component_name = 9;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.getComponentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryRequest.prototype.setComponentName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.query.QueryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageIdentifier: jspb.Message.getFieldWithDefault(msg, 1, ""),
    errorCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    errorMessage: (f = msg.getErrorMessage()) && common_pb.ErrorMessage.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && common_pb.SerializedObject.toObject(includeInstance, f),
    metaDataMap: (f = msg.getMetaDataMap()) ? f.toObject(includeInstance, proto.io.axoniq.axonserver.grpc.MetaDataValue.toObject) : [],
    processingInstructionsList: jspb.Message.toObjectList(msg.getProcessingInstructionsList(),
    common_pb.ProcessingInstruction.toObject, includeInstance),
    requestIdentifier: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryResponse}
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.query.QueryResponse;
  return proto.io.axoniq.axonserver.grpc.query.QueryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryResponse}
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorCode(value);
      break;
    case 3:
      var value = new common_pb.ErrorMessage;
      reader.readMessage(value,common_pb.ErrorMessage.deserializeBinaryFromReader);
      msg.setErrorMessage(value);
      break;
    case 4:
      var value = new common_pb.SerializedObject;
      reader.readMessage(value,common_pb.SerializedObject.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    case 5:
      var value = msg.getMetaDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.io.axoniq.axonserver.grpc.MetaDataValue.deserializeBinaryFromReader, "", new proto.io.axoniq.axonserver.grpc.MetaDataValue());
         });
      break;
    case 6:
      var value = new common_pb.ProcessingInstruction;
      reader.readMessage(value,common_pb.ProcessingInstruction.deserializeBinaryFromReader);
      msg.addProcessingInstructions(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.query.QueryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageIdentifier();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getErrorCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getErrorMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_pb.ErrorMessage.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.SerializedObject.serializeBinaryToWriter
    );
  }
  f = message.getMetaDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.io.axoniq.axonserver.grpc.MetaDataValue.serializeBinaryToWriter);
  }
  f = message.getProcessingInstructionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      common_pb.ProcessingInstruction.serializeBinaryToWriter
    );
  }
  f = message.getRequestIdentifier();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string message_identifier = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.getMessageIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.setMessageIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string error_code = 2;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.getErrorCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.setErrorCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional io.axoniq.axonserver.grpc.ErrorMessage error_message = 3;
 * @return {?proto.io.axoniq.axonserver.grpc.ErrorMessage}
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.getErrorMessage = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.ErrorMessage} */ (
    jspb.Message.getWrapperField(this, common_pb.ErrorMessage, 3));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.ErrorMessage|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryResponse} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.setErrorMessage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.clearErrorMessage = function() {
  return this.setErrorMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.hasErrorMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional io.axoniq.axonserver.grpc.SerializedObject payload = 4;
 * @return {?proto.io.axoniq.axonserver.grpc.SerializedObject}
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.getPayload = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.SerializedObject} */ (
    jspb.Message.getWrapperField(this, common_pb.SerializedObject, 4));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.SerializedObject|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryResponse} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * map<string, io.axoniq.axonserver.grpc.MetaDataValue> meta_data = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.io.axoniq.axonserver.grpc.MetaDataValue>}
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.getMetaDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.io.axoniq.axonserver.grpc.MetaDataValue>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.io.axoniq.axonserver.grpc.MetaDataValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.clearMetaDataMap = function() {
  this.getMetaDataMap().clear();
  return this;};


/**
 * repeated io.axoniq.axonserver.grpc.ProcessingInstruction processing_instructions = 6;
 * @return {!Array<!proto.io.axoniq.axonserver.grpc.ProcessingInstruction>}
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.getProcessingInstructionsList = function() {
  return /** @type{!Array<!proto.io.axoniq.axonserver.grpc.ProcessingInstruction>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.ProcessingInstruction, 6));
};


/**
 * @param {!Array<!proto.io.axoniq.axonserver.grpc.ProcessingInstruction>} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryResponse} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.setProcessingInstructionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.io.axoniq.axonserver.grpc.ProcessingInstruction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.axoniq.axonserver.grpc.ProcessingInstruction}
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.addProcessingInstructions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.io.axoniq.axonserver.grpc.ProcessingInstruction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.clearProcessingInstructionsList = function() {
  return this.setProcessingInstructionsList([]);
};


/**
 * optional string request_identifier = 7;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.getRequestIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryResponse.prototype.setRequestIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    subscriptionIdentifier: jspb.Message.getFieldWithDefault(msg, 1, ""),
    numberOfPermits: jspb.Message.getFieldWithDefault(msg, 2, 0),
    queryRequest: (f = msg.getQueryRequest()) && proto.io.axoniq.axonserver.grpc.query.QueryRequest.toObject(includeInstance, f),
    updateResponseType: (f = msg.getUpdateResponseType()) && common_pb.SerializedObject.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery;
  return proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubscriptionIdentifier(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumberOfPermits(value);
      break;
    case 3:
      var value = new proto.io.axoniq.axonserver.grpc.query.QueryRequest;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.query.QueryRequest.deserializeBinaryFromReader);
      msg.setQueryRequest(value);
      break;
    case 4:
      var value = new common_pb.SerializedObject;
      reader.readMessage(value,common_pb.SerializedObject.deserializeBinaryFromReader);
      msg.setUpdateResponseType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubscriptionIdentifier();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNumberOfPermits();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getQueryRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.axoniq.axonserver.grpc.query.QueryRequest.serializeBinaryToWriter
    );
  }
  f = message.getUpdateResponseType();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.SerializedObject.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subscription_identifier = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.prototype.getSubscriptionIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery} returns this
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.prototype.setSubscriptionIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 number_of_permits = 2;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.prototype.getNumberOfPermits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery} returns this
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.prototype.setNumberOfPermits = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional QueryRequest query_request = 3;
 * @return {?proto.io.axoniq.axonserver.grpc.query.QueryRequest}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.prototype.getQueryRequest = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.query.QueryRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.query.QueryRequest, 3));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.query.QueryRequest|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery} returns this
*/
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.prototype.setQueryRequest = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery} returns this
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.prototype.clearQueryRequest = function() {
  return this.setQueryRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.prototype.hasQueryRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional io.axoniq.axonserver.grpc.SerializedObject update_response_type = 4;
 * @return {?proto.io.axoniq.axonserver.grpc.SerializedObject}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.prototype.getUpdateResponseType = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.SerializedObject} */ (
    jspb.Message.getWrapperField(this, common_pb.SerializedObject, 4));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.SerializedObject|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery} returns this
*/
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.prototype.setUpdateResponseType = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery} returns this
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.prototype.clearUpdateResponseType = function() {
  return this.setUpdateResponseType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.prototype.hasUpdateResponseType = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.query.QueryUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageIdentifier: jspb.Message.getFieldWithDefault(msg, 2, ""),
    payload: (f = msg.getPayload()) && common_pb.SerializedObject.toObject(includeInstance, f),
    metaDataMap: (f = msg.getMetaDataMap()) ? f.toObject(includeInstance, proto.io.axoniq.axonserver.grpc.MetaDataValue.toObject) : [],
    clientId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    componentName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    errorCode: jspb.Message.getFieldWithDefault(msg, 7, ""),
    errorMessage: (f = msg.getErrorMessage()) && common_pb.ErrorMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdate}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.query.QueryUpdate;
  return proto.io.axoniq.axonserver.grpc.query.QueryUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdate}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageIdentifier(value);
      break;
    case 3:
      var value = new common_pb.SerializedObject;
      reader.readMessage(value,common_pb.SerializedObject.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    case 4:
      var value = msg.getMetaDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.io.axoniq.axonserver.grpc.MetaDataValue.deserializeBinaryFromReader, "", new proto.io.axoniq.axonserver.grpc.MetaDataValue());
         });
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorCode(value);
      break;
    case 8:
      var value = new common_pb.ErrorMessage;
      reader.readMessage(value,common_pb.ErrorMessage.deserializeBinaryFromReader);
      msg.setErrorMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.query.QueryUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageIdentifier();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_pb.SerializedObject.serializeBinaryToWriter
    );
  }
  f = message.getMetaDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.io.axoniq.axonserver.grpc.MetaDataValue.serializeBinaryToWriter);
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getComponentName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getErrorCode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getErrorMessage();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_pb.ErrorMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional string message_identifier = 2;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.getMessageIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdate} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.setMessageIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional io.axoniq.axonserver.grpc.SerializedObject payload = 3;
 * @return {?proto.io.axoniq.axonserver.grpc.SerializedObject}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.getPayload = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.SerializedObject} */ (
    jspb.Message.getWrapperField(this, common_pb.SerializedObject, 3));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.SerializedObject|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdate} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdate} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, io.axoniq.axonserver.grpc.MetaDataValue> meta_data = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.io.axoniq.axonserver.grpc.MetaDataValue>}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.getMetaDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.io.axoniq.axonserver.grpc.MetaDataValue>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.io.axoniq.axonserver.grpc.MetaDataValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdate} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.clearMetaDataMap = function() {
  this.getMetaDataMap().clear();
  return this;};


/**
 * optional string client_id = 5;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdate} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string component_name = 6;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.getComponentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdate} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.setComponentName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string error_code = 7;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.getErrorCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdate} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.setErrorCode = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional io.axoniq.axonserver.grpc.ErrorMessage error_message = 8;
 * @return {?proto.io.axoniq.axonserver.grpc.ErrorMessage}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.getErrorMessage = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.ErrorMessage} */ (
    jspb.Message.getWrapperField(this, common_pb.ErrorMessage, 8));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.ErrorMessage|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdate} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.setErrorMessage = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdate} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.clearErrorMessage = function() {
  return this.setErrorMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdate.prototype.hasErrorMessage = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    componentName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete;
  return proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getComponentName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string client_id = 2;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string component_name = 3;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.prototype.getComponentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.prototype.setComponentName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    componentName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    errorCode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    errorMessage: (f = msg.getErrorMessage()) && common_pb.ErrorMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally;
  return proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorCode(value);
      break;
    case 6:
      var value = new common_pb.ErrorMessage;
      reader.readMessage(value,common_pb.ErrorMessage.deserializeBinaryFromReader);
      msg.setErrorMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getComponentName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getErrorCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getErrorMessage();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_pb.ErrorMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional string client_id = 2;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string component_name = 3;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.prototype.getComponentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.prototype.setComponentName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string error_code = 5;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.prototype.getErrorCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.prototype.setErrorCode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional io.axoniq.axonserver.grpc.ErrorMessage error_message = 6;
 * @return {?proto.io.axoniq.axonserver.grpc.ErrorMessage}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.prototype.getErrorMessage = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.ErrorMessage} */ (
    jspb.Message.getWrapperField(this, common_pb.ErrorMessage, 6));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.ErrorMessage|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally} returns this
*/
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.prototype.setErrorMessage = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.prototype.clearErrorMessage = function() {
  return this.setErrorMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.prototype.hasErrorMessage = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  SUBSCRIBE: 1,
  UNSUBSCRIBE: 2,
  GET_INITIAL_RESULT: 3,
  FLOW_CONTROL: 4
};

/**
 * @return {proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.RequestCase}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.getRequestCase = function() {
  return /** @type {proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    subscribe: (f = msg.getSubscribe()) && proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.toObject(includeInstance, f),
    unsubscribe: (f = msg.getUnsubscribe()) && proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.toObject(includeInstance, f),
    getInitialResult: (f = msg.getGetInitialResult()) && proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.toObject(includeInstance, f),
    flowControl: (f = msg.getFlowControl()) && proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest;
  return proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.deserializeBinaryFromReader);
      msg.setSubscribe(value);
      break;
    case 2:
      var value = new proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.deserializeBinaryFromReader);
      msg.setUnsubscribe(value);
      break;
    case 3:
      var value = new proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.deserializeBinaryFromReader);
      msg.setGetInitialResult(value);
      break;
    case 4:
      var value = new proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.deserializeBinaryFromReader);
      msg.setFlowControl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubscribe();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.serializeBinaryToWriter
    );
  }
  f = message.getUnsubscribe();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.serializeBinaryToWriter
    );
  }
  f = message.getGetInitialResult();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.serializeBinaryToWriter
    );
  }
  f = message.getFlowControl();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery.serializeBinaryToWriter
    );
  }
};


/**
 * optional SubscriptionQuery subscribe = 1;
 * @return {?proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.getSubscribe = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery, 1));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest} returns this
*/
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.setSubscribe = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.clearSubscribe = function() {
  return this.setSubscribe(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.hasSubscribe = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SubscriptionQuery unsubscribe = 2;
 * @return {?proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.getUnsubscribe = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery, 2));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest} returns this
*/
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.setUnsubscribe = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.clearUnsubscribe = function() {
  return this.setUnsubscribe(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.hasUnsubscribe = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SubscriptionQuery get_initial_result = 3;
 * @return {?proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.getGetInitialResult = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery, 3));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest} returns this
*/
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.setGetInitialResult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.clearGetInitialResult = function() {
  return this.setGetInitialResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.hasGetInitialResult = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SubscriptionQuery flow_control = 4;
 * @return {?proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.getFlowControl = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery, 4));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.query.SubscriptionQuery|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest} returns this
*/
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.setFlowControl = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.clearFlowControl = function() {
  return this.setFlowControl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryRequest.prototype.hasFlowControl = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.oneofGroups_ = [[3,4,5,6]];

/**
 * @enum {number}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  INITIAL_RESULT: 3,
  UPDATE: 4,
  COMPLETE: 5,
  COMPLETE_EXCEPTIONALLY: 6
};

/**
 * @return {proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.ResponseCase}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.getResponseCase = function() {
  return /** @type {proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageIdentifier: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subscriptionIdentifier: jspb.Message.getFieldWithDefault(msg, 2, ""),
    initialResult: (f = msg.getInitialResult()) && proto.io.axoniq.axonserver.grpc.query.QueryResponse.toObject(includeInstance, f),
    update: (f = msg.getUpdate()) && proto.io.axoniq.axonserver.grpc.query.QueryUpdate.toObject(includeInstance, f),
    complete: (f = msg.getComplete()) && proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.toObject(includeInstance, f),
    completeExceptionally: (f = msg.getCompleteExceptionally()) && proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse;
  return proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubscriptionIdentifier(value);
      break;
    case 3:
      var value = new proto.io.axoniq.axonserver.grpc.query.QueryResponse;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.query.QueryResponse.deserializeBinaryFromReader);
      msg.setInitialResult(value);
      break;
    case 4:
      var value = new proto.io.axoniq.axonserver.grpc.query.QueryUpdate;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.query.QueryUpdate.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    case 5:
      var value = new proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.deserializeBinaryFromReader);
      msg.setComplete(value);
      break;
    case 6:
      var value = new proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.deserializeBinaryFromReader);
      msg.setCompleteExceptionally(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageIdentifier();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubscriptionIdentifier();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInitialResult();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.axoniq.axonserver.grpc.query.QueryResponse.serializeBinaryToWriter
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.axoniq.axonserver.grpc.query.QueryUpdate.serializeBinaryToWriter
    );
  }
  f = message.getComplete();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete.serializeBinaryToWriter
    );
  }
  f = message.getCompleteExceptionally();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally.serializeBinaryToWriter
    );
  }
};


/**
 * optional string message_identifier = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.getMessageIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.setMessageIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subscription_identifier = 2;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.getSubscriptionIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.setSubscriptionIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional QueryResponse initial_result = 3;
 * @return {?proto.io.axoniq.axonserver.grpc.query.QueryResponse}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.getInitialResult = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.query.QueryResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.query.QueryResponse, 3));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.query.QueryResponse|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse} returns this
*/
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.setInitialResult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.clearInitialResult = function() {
  return this.setInitialResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.hasInitialResult = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional QueryUpdate update = 4;
 * @return {?proto.io.axoniq.axonserver.grpc.query.QueryUpdate}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.getUpdate = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.query.QueryUpdate} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.query.QueryUpdate, 4));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.query.QueryUpdate|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse} returns this
*/
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.setUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.clearUpdate = function() {
  return this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional QueryUpdateComplete complete = 5;
 * @return {?proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.getComplete = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete, 5));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.query.QueryUpdateComplete|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse} returns this
*/
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.setComplete = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.clearComplete = function() {
  return this.setComplete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.hasComplete = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional QueryUpdateCompleteExceptionally complete_exceptionally = 6;
 * @return {?proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.getCompleteExceptionally = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally, 6));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.query.QueryUpdateCompleteExceptionally|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse} returns this
*/
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.setCompleteExceptionally = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.clearCompleteExceptionally = function() {
  return this.setCompleteExceptionally(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.query.SubscriptionQueryResponse.prototype.hasCompleteExceptionally = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.query.QuerySubscription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.query.QuerySubscription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    query: jspb.Message.getFieldWithDefault(msg, 2, ""),
    resultName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    componentName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QuerySubscription}
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.query.QuerySubscription;
  return proto.io.axoniq.axonserver.grpc.query.QuerySubscription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QuerySubscription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.query.QuerySubscription}
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.query.QuerySubscription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.query.QuerySubscription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResultName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getComponentName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string message_id = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QuerySubscription} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string query = 2;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QuerySubscription} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string result_name = 3;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription.prototype.getResultName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QuerySubscription} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription.prototype.setResultName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string component_name = 4;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription.prototype.getComponentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QuerySubscription} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription.prototype.setComponentName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string client_id = 5;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.query.QuerySubscription} returns this
 */
proto.io.axoniq.axonserver.grpc.query.QuerySubscription.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


goog.object.extend(exports, proto.io.axoniq.axonserver.grpc.query);
