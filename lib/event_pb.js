// source: event.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.ColumnsResponse', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.Confirmation', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.Event', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.EventWithToken', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.GetEventsRequest', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.PayloadDescription', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.DataCase', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.QueryValue', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.QueryValue.DataCase', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.RowResponse', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.ScheduleToken', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.event.TrackingToken', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest.displayName = 'proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.displayName = 'proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest.displayName = 'proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.ScheduleToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.ScheduleToken.displayName = 'proto.io.axoniq.axonserver.grpc.event.ScheduleToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest.displayName = 'proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest.displayName = 'proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest.displayName = 'proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.TrackingToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.TrackingToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.TrackingToken.displayName = 'proto.io.axoniq.axonserver.grpc.event.TrackingToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.EventWithToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.EventWithToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.EventWithToken.displayName = 'proto.io.axoniq.axonserver.grpc.event.EventWithToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.displayName = 'proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.oneofGroups_);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.displayName = 'proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.ColumnsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.repeatedFields_, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.ColumnsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.displayName = 'proto.io.axoniq.axonserver.grpc.event.ColumnsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.RowResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.axoniq.axonserver.grpc.event.RowResponse.repeatedFields_, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.RowResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.RowResponse.displayName = 'proto.io.axoniq.axonserver.grpc.event.RowResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest.displayName = 'proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse.displayName = 'proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.Confirmation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.Confirmation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.Confirmation.displayName = 'proto.io.axoniq.axonserver.grpc.event.Confirmation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.displayName = 'proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.displayName = 'proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.repeatedFields_, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.GetEventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.displayName = 'proto.io.axoniq.axonserver.grpc.event.GetEventsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.Event.displayName = 'proto.io.axoniq.axonserver.grpc.event.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.axoniq.axonserver.grpc.event.QueryValue.oneofGroups_);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.QueryValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.QueryValue.displayName = 'proto.io.axoniq.axonserver.grpc.event.QueryValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.event.PayloadDescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.event.PayloadDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.event.PayloadDescription.displayName = 'proto.io.axoniq.axonserver.grpc.event.PayloadDescription';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instant: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.io.axoniq.axonserver.grpc.event.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest}
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest;
  return proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest}
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstant(value);
      break;
    case 2:
      var value = new proto.io.axoniq.axonserver.grpc.event.Event;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.event.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstant();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.axoniq.axonserver.grpc.event.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 instant = 1;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest.prototype.getInstant = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest.prototype.setInstant = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.io.axoniq.axonserver.grpc.event.Event}
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest.prototype.getEvent = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.event.Event} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.event.Event, 2));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.event.Event|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest} returns this
*/
proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleEventRequest.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, ""),
    instant: jspb.Message.getFieldWithDefault(msg, 2, 0),
    event: (f = msg.getEvent()) && proto.io.axoniq.axonserver.grpc.event.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest}
 */
proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest;
  return proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest}
 */
proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstant(value);
      break;
    case 3:
      var value = new proto.io.axoniq.axonserver.grpc.event.Event;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.event.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInstant();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.axoniq.axonserver.grpc.event.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 instant = 2;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.prototype.getInstant = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.prototype.setInstant = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Event event = 3;
 * @return {?proto.io.axoniq.axonserver.grpc.event.Event}
 */
proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.prototype.getEvent = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.event.Event} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.event.Event, 3));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.event.Event|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest} returns this
*/
proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.RescheduleEventRequest.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest}
 */
proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest;
  return proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest}
 */
proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.CancelScheduledEventRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleToken.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.ScheduleToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.ScheduleToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleToken.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.ScheduleToken}
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.ScheduleToken;
  return proto.io.axoniq.axonserver.grpc.event.ScheduleToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.ScheduleToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.ScheduleToken}
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.ScheduleToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.ScheduleToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleToken.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.ScheduleToken} returns this
 */
proto.io.axoniq.axonserver.grpc.event.ScheduleToken.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest}
 */
proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest;
  return proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest}
 */
proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.GetFirstTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest}
 */
proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest;
  return proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest}
 */
proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.GetLastTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instant: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest}
 */
proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest;
  return proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest}
 */
proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInstant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstant();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 instant = 1;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest.prototype.getInstant = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetTokenAtRequest.prototype.setInstant = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.TrackingToken.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.TrackingToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.TrackingToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.TrackingToken.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.TrackingToken}
 */
proto.io.axoniq.axonserver.grpc.event.TrackingToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.TrackingToken;
  return proto.io.axoniq.axonserver.grpc.event.TrackingToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.TrackingToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.TrackingToken}
 */
proto.io.axoniq.axonserver.grpc.event.TrackingToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.TrackingToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.TrackingToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.TrackingToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.TrackingToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 token = 1;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.TrackingToken.prototype.getToken = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.TrackingToken} returns this
 */
proto.io.axoniq.axonserver.grpc.event.TrackingToken.prototype.setToken = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.EventWithToken.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.EventWithToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.EventWithToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.EventWithToken.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, 0),
    event: (f = msg.getEvent()) && proto.io.axoniq.axonserver.grpc.event.Event.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.EventWithToken}
 */
proto.io.axoniq.axonserver.grpc.event.EventWithToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.EventWithToken;
  return proto.io.axoniq.axonserver.grpc.event.EventWithToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.EventWithToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.EventWithToken}
 */
proto.io.axoniq.axonserver.grpc.event.EventWithToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setToken(value);
      break;
    case 2:
      var value = new proto.io.axoniq.axonserver.grpc.event.Event;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.event.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.EventWithToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.EventWithToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.EventWithToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.EventWithToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.axoniq.axonserver.grpc.event.Event.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 token = 1;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.EventWithToken.prototype.getToken = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.EventWithToken} returns this
 */
proto.io.axoniq.axonserver.grpc.event.EventWithToken.prototype.setToken = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.io.axoniq.axonserver.grpc.event.Event}
 */
proto.io.axoniq.axonserver.grpc.event.EventWithToken.prototype.getEvent = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.event.Event} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.event.Event, 2));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.event.Event|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.EventWithToken} returns this
*/
proto.io.axoniq.axonserver.grpc.event.EventWithToken.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.event.EventWithToken} returns this
 */
proto.io.axoniq.axonserver.grpc.event.EventWithToken.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.EventWithToken.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, ""),
    numberOfPermits: jspb.Message.getFieldWithDefault(msg, 2, 0),
    liveEvents: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    forceReadFromLeader: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest;
  return proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumberOfPermits(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLiveEvents(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceReadFromLeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNumberOfPermits();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLiveEvents();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getForceReadFromLeader();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 number_of_permits = 2;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.prototype.getNumberOfPermits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.prototype.setNumberOfPermits = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool live_events = 3;
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.prototype.getLiveEvents = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.prototype.setLiveEvents = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool force_read_from_leader = 4;
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.prototype.getForceReadFromLeader = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsRequest.prototype.setForceReadFromLeader = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.DataCase = {
  DATA_NOT_SET: 0,
  COLUMNS: 1,
  ROW: 2,
  FILES_COMPLETED: 3
};

/**
 * @return {proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.DataCase}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.prototype.getDataCase = function() {
  return /** @type {proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.DataCase} */(jspb.Message.computeOneofCase(this, proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    columns: (f = msg.getColumns()) && proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.toObject(includeInstance, f),
    row: (f = msg.getRow()) && proto.io.axoniq.axonserver.grpc.event.RowResponse.toObject(includeInstance, f),
    filesCompleted: (f = msg.getFilesCompleted()) && proto.io.axoniq.axonserver.grpc.event.Confirmation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse;
  return proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.axoniq.axonserver.grpc.event.ColumnsResponse;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.deserializeBinaryFromReader);
      msg.setColumns(value);
      break;
    case 2:
      var value = new proto.io.axoniq.axonserver.grpc.event.RowResponse;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.event.RowResponse.deserializeBinaryFromReader);
      msg.setRow(value);
      break;
    case 3:
      var value = new proto.io.axoniq.axonserver.grpc.event.Confirmation;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.event.Confirmation.deserializeBinaryFromReader);
      msg.setFilesCompleted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumns();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.serializeBinaryToWriter
    );
  }
  f = message.getRow();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.axoniq.axonserver.grpc.event.RowResponse.serializeBinaryToWriter
    );
  }
  f = message.getFilesCompleted();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.axoniq.axonserver.grpc.event.Confirmation.serializeBinaryToWriter
    );
  }
};


/**
 * optional ColumnsResponse columns = 1;
 * @return {?proto.io.axoniq.axonserver.grpc.event.ColumnsResponse}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.prototype.getColumns = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.event.ColumnsResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.event.ColumnsResponse, 1));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.event.ColumnsResponse|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse} returns this
*/
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.prototype.setColumns = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.prototype.clearColumns = function() {
  return this.setColumns(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.prototype.hasColumns = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RowResponse row = 2;
 * @return {?proto.io.axoniq.axonserver.grpc.event.RowResponse}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.prototype.getRow = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.event.RowResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.event.RowResponse, 2));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.event.RowResponse|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse} returns this
*/
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.prototype.setRow = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.prototype.clearRow = function() {
  return this.setRow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.prototype.hasRow = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Confirmation files_completed = 3;
 * @return {?proto.io.axoniq.axonserver.grpc.event.Confirmation}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.prototype.getFilesCompleted = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.event.Confirmation} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.event.Confirmation, 3));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.event.Confirmation|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse} returns this
*/
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.prototype.setFilesCompleted = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.prototype.clearFilesCompleted = function() {
  return this.setFilesCompleted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.QueryEventsResponse.prototype.hasFilesCompleted = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.ColumnsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.ColumnsResponse}
 */
proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.ColumnsResponse;
  return proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.ColumnsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.ColumnsResponse}
 */
proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addColumn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.ColumnsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string column = 1;
 * @return {!Array<string>}
 */
proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.prototype.getColumnList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.ColumnsResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.prototype.setColumnList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.axoniq.axonserver.grpc.event.ColumnsResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.prototype.addColumn = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.axoniq.axonserver.grpc.event.ColumnsResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.event.ColumnsResponse.prototype.clearColumnList = function() {
  return this.setColumnList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.axoniq.axonserver.grpc.event.RowResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.RowResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.RowResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.RowResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.RowResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    idValuesList: jspb.Message.toObjectList(msg.getIdValuesList(),
    proto.io.axoniq.axonserver.grpc.event.QueryValue.toObject, includeInstance),
    sortValuesList: jspb.Message.toObjectList(msg.getSortValuesList(),
    proto.io.axoniq.axonserver.grpc.event.QueryValue.toObject, includeInstance),
    valuesMap: (f = msg.getValuesMap()) ? f.toObject(includeInstance, proto.io.axoniq.axonserver.grpc.event.QueryValue.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.RowResponse}
 */
proto.io.axoniq.axonserver.grpc.event.RowResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.RowResponse;
  return proto.io.axoniq.axonserver.grpc.event.RowResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.RowResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.RowResponse}
 */
proto.io.axoniq.axonserver.grpc.event.RowResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.axoniq.axonserver.grpc.event.QueryValue;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.event.QueryValue.deserializeBinaryFromReader);
      msg.addIdValues(value);
      break;
    case 2:
      var value = new proto.io.axoniq.axonserver.grpc.event.QueryValue;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.event.QueryValue.deserializeBinaryFromReader);
      msg.addSortValues(value);
      break;
    case 3:
      var value = msg.getValuesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.io.axoniq.axonserver.grpc.event.QueryValue.deserializeBinaryFromReader, "", new proto.io.axoniq.axonserver.grpc.event.QueryValue());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.RowResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.RowResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.RowResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.RowResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.axoniq.axonserver.grpc.event.QueryValue.serializeBinaryToWriter
    );
  }
  f = message.getSortValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.io.axoniq.axonserver.grpc.event.QueryValue.serializeBinaryToWriter
    );
  }
  f = message.getValuesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.io.axoniq.axonserver.grpc.event.QueryValue.serializeBinaryToWriter);
  }
};


/**
 * repeated QueryValue id_values = 1;
 * @return {!Array<!proto.io.axoniq.axonserver.grpc.event.QueryValue>}
 */
proto.io.axoniq.axonserver.grpc.event.RowResponse.prototype.getIdValuesList = function() {
  return /** @type{!Array<!proto.io.axoniq.axonserver.grpc.event.QueryValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.axoniq.axonserver.grpc.event.QueryValue, 1));
};


/**
 * @param {!Array<!proto.io.axoniq.axonserver.grpc.event.QueryValue>} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.RowResponse} returns this
*/
proto.io.axoniq.axonserver.grpc.event.RowResponse.prototype.setIdValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.axoniq.axonserver.grpc.event.QueryValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryValue}
 */
proto.io.axoniq.axonserver.grpc.event.RowResponse.prototype.addIdValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.axoniq.axonserver.grpc.event.QueryValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.axoniq.axonserver.grpc.event.RowResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.event.RowResponse.prototype.clearIdValuesList = function() {
  return this.setIdValuesList([]);
};


/**
 * repeated QueryValue sort_values = 2;
 * @return {!Array<!proto.io.axoniq.axonserver.grpc.event.QueryValue>}
 */
proto.io.axoniq.axonserver.grpc.event.RowResponse.prototype.getSortValuesList = function() {
  return /** @type{!Array<!proto.io.axoniq.axonserver.grpc.event.QueryValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.axoniq.axonserver.grpc.event.QueryValue, 2));
};


/**
 * @param {!Array<!proto.io.axoniq.axonserver.grpc.event.QueryValue>} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.RowResponse} returns this
*/
proto.io.axoniq.axonserver.grpc.event.RowResponse.prototype.setSortValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.io.axoniq.axonserver.grpc.event.QueryValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryValue}
 */
proto.io.axoniq.axonserver.grpc.event.RowResponse.prototype.addSortValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.io.axoniq.axonserver.grpc.event.QueryValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.axoniq.axonserver.grpc.event.RowResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.event.RowResponse.prototype.clearSortValuesList = function() {
  return this.setSortValuesList([]);
};


/**
 * map<string, QueryValue> values = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.io.axoniq.axonserver.grpc.event.QueryValue>}
 */
proto.io.axoniq.axonserver.grpc.event.RowResponse.prototype.getValuesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.io.axoniq.axonserver.grpc.event.QueryValue>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.io.axoniq.axonserver.grpc.event.QueryValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.axoniq.axonserver.grpc.event.RowResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.event.RowResponse.prototype.clearValuesMap = function() {
  this.getValuesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    aggregateId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fromSequenceNr: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest}
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest;
  return proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest}
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAggregateId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFromSequenceNr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAggregateId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFromSequenceNr();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string aggregate_id = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest.prototype.getAggregateId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest.prototype.setAggregateId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 from_sequence_nr = 3;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest.prototype.getFromSequenceNr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrRequest.prototype.setFromSequenceNr = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    toSequenceNr: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse}
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse;
  return proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse}
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setToSequenceNr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToSequenceNr();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 to_sequence_nr = 1;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse.prototype.getToSequenceNr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse} returns this
 */
proto.io.axoniq.axonserver.grpc.event.ReadHighestSequenceNrResponse.prototype.setToSequenceNr = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.Confirmation.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.Confirmation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.Confirmation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.Confirmation.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.Confirmation}
 */
proto.io.axoniq.axonserver.grpc.event.Confirmation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.Confirmation;
  return proto.io.axoniq.axonserver.grpc.event.Confirmation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.Confirmation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.Confirmation}
 */
proto.io.axoniq.axonserver.grpc.event.Confirmation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.Confirmation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.Confirmation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.Confirmation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.Confirmation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.Confirmation.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.Confirmation} returns this
 */
proto.io.axoniq.axonserver.grpc.event.Confirmation.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    aggregateId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    initialSequence: jspb.Message.getFieldWithDefault(msg, 2, 0),
    allowSnapshots: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    maxSequence: jspb.Message.getFieldWithDefault(msg, 4, 0),
    minToken: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest;
  return proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAggregateId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInitialSequence(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowSnapshots(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxSequence(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAggregateId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInitialSequence();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAllowSnapshots();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getMaxSequence();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getMinToken();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string aggregate_id = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.prototype.getAggregateId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.prototype.setAggregateId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 initial_sequence = 2;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.prototype.getInitialSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.prototype.setInitialSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool allow_snapshots = 3;
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.prototype.getAllowSnapshots = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.prototype.setAllowSnapshots = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int64 max_sequence = 4;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.prototype.getMaxSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.prototype.setMaxSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 min_token = 5;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.prototype.getMinToken = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateEventsRequest.prototype.setMinToken = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    aggregateId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    initialSequence: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxSequence: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxResults: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest;
  return proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAggregateId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInitialSequence(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxSequence(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAggregateId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInitialSequence();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getMaxSequence();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getMaxResults();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string aggregate_id = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.prototype.getAggregateId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.prototype.setAggregateId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 initial_sequence = 2;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.prototype.getInitialSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.prototype.setInitialSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 max_sequence = 3;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.prototype.getMaxSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.prototype.setMaxSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 max_results = 4;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.prototype.getMaxResults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetAggregateSnapshotsRequest.prototype.setMaxResults = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetEventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    trackingToken: jspb.Message.getFieldWithDefault(msg, 1, 0),
    numberOfPermits: jspb.Message.getFieldWithDefault(msg, 2, 0),
    clientId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    componentName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    processor: jspb.Message.getFieldWithDefault(msg, 5, ""),
    blacklistList: jspb.Message.toObjectList(msg.getBlacklistList(),
    proto.io.axoniq.axonserver.grpc.event.PayloadDescription.toObject, includeInstance),
    forceReadFromLeader: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetEventsRequest}
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.GetEventsRequest;
  return proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetEventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetEventsRequest}
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTrackingToken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumberOfPermits(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessor(value);
      break;
    case 6:
      var value = new proto.io.axoniq.axonserver.grpc.event.PayloadDescription;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.event.PayloadDescription.deserializeBinaryFromReader);
      msg.addBlacklist(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceReadFromLeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.GetEventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrackingToken();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNumberOfPermits();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getComponentName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProcessor();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBlacklistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.io.axoniq.axonserver.grpc.event.PayloadDescription.serializeBinaryToWriter
    );
  }
  f = message.getForceReadFromLeader();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional int64 tracking_token = 1;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.getTrackingToken = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetEventsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.setTrackingToken = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 number_of_permits = 2;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.getNumberOfPermits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetEventsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.setNumberOfPermits = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string client_id = 3;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetEventsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string component_name = 4;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.getComponentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetEventsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.setComponentName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string processor = 5;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.getProcessor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetEventsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.setProcessor = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated PayloadDescription blacklist = 6;
 * @return {!Array<!proto.io.axoniq.axonserver.grpc.event.PayloadDescription>}
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.getBlacklistList = function() {
  return /** @type{!Array<!proto.io.axoniq.axonserver.grpc.event.PayloadDescription>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.axoniq.axonserver.grpc.event.PayloadDescription, 6));
};


/**
 * @param {!Array<!proto.io.axoniq.axonserver.grpc.event.PayloadDescription>} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetEventsRequest} returns this
*/
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.setBlacklistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.io.axoniq.axonserver.grpc.event.PayloadDescription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.axoniq.axonserver.grpc.event.PayloadDescription}
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.addBlacklist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.io.axoniq.axonserver.grpc.event.PayloadDescription, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetEventsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.clearBlacklistList = function() {
  return this.setBlacklistList([]);
};


/**
 * optional bool force_read_from_leader = 7;
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.getForceReadFromLeader = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.GetEventsRequest} returns this
 */
proto.io.axoniq.axonserver.grpc.event.GetEventsRequest.prototype.setForceReadFromLeader = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageIdentifier: jspb.Message.getFieldWithDefault(msg, 1, ""),
    aggregateIdentifier: jspb.Message.getFieldWithDefault(msg, 2, ""),
    aggregateSequenceNumber: jspb.Message.getFieldWithDefault(msg, 3, 0),
    aggregateType: jspb.Message.getFieldWithDefault(msg, 4, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 5, 0),
    payload: (f = msg.getPayload()) && common_pb.SerializedObject.toObject(includeInstance, f),
    metaDataMap: (f = msg.getMetaDataMap()) ? f.toObject(includeInstance, proto.io.axoniq.axonserver.grpc.MetaDataValue.toObject) : [],
    snapshot: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.Event}
 */
proto.io.axoniq.axonserver.grpc.event.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.Event;
  return proto.io.axoniq.axonserver.grpc.event.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.Event}
 */
proto.io.axoniq.axonserver.grpc.event.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAggregateIdentifier(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAggregateSequenceNumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAggregateType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 6:
      var value = new common_pb.SerializedObject;
      reader.readMessage(value,common_pb.SerializedObject.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    case 7:
      var value = msg.getMetaDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.io.axoniq.axonserver.grpc.MetaDataValue.deserializeBinaryFromReader, "", new proto.io.axoniq.axonserver.grpc.MetaDataValue());
         });
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSnapshot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageIdentifier();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAggregateIdentifier();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAggregateSequenceNumber();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getAggregateType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_pb.SerializedObject.serializeBinaryToWriter
    );
  }
  f = message.getMetaDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.io.axoniq.axonserver.grpc.MetaDataValue.serializeBinaryToWriter);
  }
  f = message.getSnapshot();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string message_identifier = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.getMessageIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.Event} returns this
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.setMessageIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string aggregate_identifier = 2;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.getAggregateIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.Event} returns this
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.setAggregateIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 aggregate_sequence_number = 3;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.getAggregateSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.Event} returns this
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.setAggregateSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string aggregate_type = 4;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.getAggregateType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.Event} returns this
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.setAggregateType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 timestamp = 5;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.Event} returns this
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional io.axoniq.axonserver.grpc.SerializedObject payload = 6;
 * @return {?proto.io.axoniq.axonserver.grpc.SerializedObject}
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.getPayload = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.SerializedObject} */ (
    jspb.Message.getWrapperField(this, common_pb.SerializedObject, 6));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.SerializedObject|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.Event} returns this
*/
proto.io.axoniq.axonserver.grpc.event.Event.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.event.Event} returns this
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * map<string, io.axoniq.axonserver.grpc.MetaDataValue> meta_data = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.io.axoniq.axonserver.grpc.MetaDataValue>}
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.getMetaDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.io.axoniq.axonserver.grpc.MetaDataValue>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      proto.io.axoniq.axonserver.grpc.MetaDataValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.axoniq.axonserver.grpc.event.Event} returns this
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.clearMetaDataMap = function() {
  this.getMetaDataMap().clear();
  return this;};


/**
 * optional bool snapshot = 8;
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.getSnapshot = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.Event} returns this
 */
proto.io.axoniq.axonserver.grpc.event.Event.prototype.setSnapshot = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.DataCase = {
  DATA_NOT_SET: 0,
  TEXT_VALUE: 1,
  NUMBER_VALUE: 2,
  BOOLEAN_VALUE: 3,
  DOUBLE_VALUE: 4
};

/**
 * @return {proto.io.axoniq.axonserver.grpc.event.QueryValue.DataCase}
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.getDataCase = function() {
  return /** @type {proto.io.axoniq.axonserver.grpc.event.QueryValue.DataCase} */(jspb.Message.computeOneofCase(this, proto.io.axoniq.axonserver.grpc.event.QueryValue.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.QueryValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.QueryValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    textValue: jspb.Message.getFieldWithDefault(msg, 1, ""),
    numberValue: jspb.Message.getFieldWithDefault(msg, 2, 0),
    booleanValue: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    doubleValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryValue}
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.QueryValue;
  return proto.io.axoniq.axonserver.grpc.event.QueryValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.QueryValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryValue}
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setNumberValue(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBooleanValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDoubleValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.QueryValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.QueryValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeSint64(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional string text_value = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.getTextValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryValue} returns this
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.setTextValue = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.io.axoniq.axonserver.grpc.event.QueryValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryValue} returns this
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.clearTextValue = function() {
  return jspb.Message.setOneofField(this, 1, proto.io.axoniq.axonserver.grpc.event.QueryValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.hasTextValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sint64 number_value = 2;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.getNumberValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryValue} returns this
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.setNumberValue = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.io.axoniq.axonserver.grpc.event.QueryValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryValue} returns this
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.clearNumberValue = function() {
  return jspb.Message.setOneofField(this, 2, proto.io.axoniq.axonserver.grpc.event.QueryValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.hasNumberValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool boolean_value = 3;
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.getBooleanValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryValue} returns this
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.setBooleanValue = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.io.axoniq.axonserver.grpc.event.QueryValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryValue} returns this
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.clearBooleanValue = function() {
  return jspb.Message.setOneofField(this, 3, proto.io.axoniq.axonserver.grpc.event.QueryValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.hasBooleanValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double double_value = 4;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.getDoubleValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryValue} returns this
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.setDoubleValue = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.io.axoniq.axonserver.grpc.event.QueryValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.event.QueryValue} returns this
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.clearDoubleValue = function() {
  return jspb.Message.setOneofField(this, 4, proto.io.axoniq.axonserver.grpc.event.QueryValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.event.QueryValue.prototype.hasDoubleValue = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.event.PayloadDescription.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.event.PayloadDescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.event.PayloadDescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.PayloadDescription.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    revision: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.event.PayloadDescription}
 */
proto.io.axoniq.axonserver.grpc.event.PayloadDescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.event.PayloadDescription;
  return proto.io.axoniq.axonserver.grpc.event.PayloadDescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.event.PayloadDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.event.PayloadDescription}
 */
proto.io.axoniq.axonserver.grpc.event.PayloadDescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.event.PayloadDescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.event.PayloadDescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.event.PayloadDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.event.PayloadDescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRevision();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.event.PayloadDescription.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.PayloadDescription} returns this
 */
proto.io.axoniq.axonserver.grpc.event.PayloadDescription.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string revision = 2;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.event.PayloadDescription.prototype.getRevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.event.PayloadDescription} returns this
 */
proto.io.axoniq.axonserver.grpc.event.PayloadDescription.prototype.setRevision = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.io.axoniq.axonserver.grpc.event);
