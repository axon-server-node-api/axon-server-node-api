// source: common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.ErrorMessage', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.FlowControl', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.InstructionAck', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.InstructionResult', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.MetaDataValue', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.MetaDataValue.DataCase', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.ProcessingInstruction', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.ProcessingKey', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.SerializedObject', null, global);
goog.exportSymbol('proto.io.axoniq.axonserver.grpc.TaskStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.SerializedObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.SerializedObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.SerializedObject.displayName = 'proto.io.axoniq.axonserver.grpc.SerializedObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.axoniq.axonserver.grpc.MetaDataValue.oneofGroups_);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.MetaDataValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.MetaDataValue.displayName = 'proto.io.axoniq.axonserver.grpc.MetaDataValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.ProcessingInstruction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.ProcessingInstruction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.ProcessingInstruction.displayName = 'proto.io.axoniq.axonserver.grpc.ProcessingInstruction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.axoniq.axonserver.grpc.ErrorMessage.repeatedFields_, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.ErrorMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.ErrorMessage.displayName = 'proto.io.axoniq.axonserver.grpc.ErrorMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.FlowControl = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.FlowControl, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.FlowControl.displayName = 'proto.io.axoniq.axonserver.grpc.FlowControl';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.InstructionAck = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.InstructionAck, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.InstructionAck.displayName = 'proto.io.axoniq.axonserver.grpc.InstructionAck';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.axoniq.axonserver.grpc.InstructionResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.axoniq.axonserver.grpc.InstructionResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.axoniq.axonserver.grpc.InstructionResult.displayName = 'proto.io.axoniq.axonserver.grpc.InstructionResult';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.SerializedObject.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.SerializedObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.SerializedObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.SerializedObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    revision: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.SerializedObject}
 */
proto.io.axoniq.axonserver.grpc.SerializedObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.SerializedObject;
  return proto.io.axoniq.axonserver.grpc.SerializedObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.SerializedObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.SerializedObject}
 */
proto.io.axoniq.axonserver.grpc.SerializedObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRevision(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.SerializedObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.SerializedObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.SerializedObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.SerializedObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRevision();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.SerializedObject.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.SerializedObject} returns this
 */
proto.io.axoniq.axonserver.grpc.SerializedObject.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string revision = 2;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.SerializedObject.prototype.getRevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.SerializedObject} returns this
 */
proto.io.axoniq.axonserver.grpc.SerializedObject.prototype.setRevision = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes data = 3;
 * @return {!(string|Uint8Array)}
 */
proto.io.axoniq.axonserver.grpc.SerializedObject.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes data = 3;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.SerializedObject.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.SerializedObject.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.axoniq.axonserver.grpc.SerializedObject} returns this
 */
proto.io.axoniq.axonserver.grpc.SerializedObject.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.DataCase = {
  DATA_NOT_SET: 0,
  TEXT_VALUE: 1,
  NUMBER_VALUE: 2,
  BOOLEAN_VALUE: 3,
  DOUBLE_VALUE: 4,
  BYTES_VALUE: 5
};

/**
 * @return {proto.io.axoniq.axonserver.grpc.MetaDataValue.DataCase}
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.getDataCase = function() {
  return /** @type {proto.io.axoniq.axonserver.grpc.MetaDataValue.DataCase} */(jspb.Message.computeOneofCase(this, proto.io.axoniq.axonserver.grpc.MetaDataValue.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.MetaDataValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.MetaDataValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    textValue: jspb.Message.getFieldWithDefault(msg, 1, ""),
    numberValue: jspb.Message.getFieldWithDefault(msg, 2, 0),
    booleanValue: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    doubleValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    bytesValue: (f = msg.getBytesValue()) && proto.io.axoniq.axonserver.grpc.SerializedObject.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.MetaDataValue}
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.MetaDataValue;
  return proto.io.axoniq.axonserver.grpc.MetaDataValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.MetaDataValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.MetaDataValue}
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setNumberValue(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBooleanValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDoubleValue(value);
      break;
    case 5:
      var value = new proto.io.axoniq.axonserver.grpc.SerializedObject;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.SerializedObject.deserializeBinaryFromReader);
      msg.setBytesValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.MetaDataValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.MetaDataValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeSint64(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getBytesValue();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.axoniq.axonserver.grpc.SerializedObject.serializeBinaryToWriter
    );
  }
};


/**
 * optional string text_value = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.getTextValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.MetaDataValue} returns this
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.setTextValue = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.io.axoniq.axonserver.grpc.MetaDataValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.MetaDataValue} returns this
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.clearTextValue = function() {
  return jspb.Message.setOneofField(this, 1, proto.io.axoniq.axonserver.grpc.MetaDataValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.hasTextValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sint64 number_value = 2;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.getNumberValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.MetaDataValue} returns this
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.setNumberValue = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.io.axoniq.axonserver.grpc.MetaDataValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.MetaDataValue} returns this
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.clearNumberValue = function() {
  return jspb.Message.setOneofField(this, 2, proto.io.axoniq.axonserver.grpc.MetaDataValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.hasNumberValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool boolean_value = 3;
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.getBooleanValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.axoniq.axonserver.grpc.MetaDataValue} returns this
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.setBooleanValue = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.io.axoniq.axonserver.grpc.MetaDataValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.MetaDataValue} returns this
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.clearBooleanValue = function() {
  return jspb.Message.setOneofField(this, 3, proto.io.axoniq.axonserver.grpc.MetaDataValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.hasBooleanValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double double_value = 4;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.getDoubleValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.MetaDataValue} returns this
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.setDoubleValue = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.io.axoniq.axonserver.grpc.MetaDataValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.MetaDataValue} returns this
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.clearDoubleValue = function() {
  return jspb.Message.setOneofField(this, 4, proto.io.axoniq.axonserver.grpc.MetaDataValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.hasDoubleValue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SerializedObject bytes_value = 5;
 * @return {?proto.io.axoniq.axonserver.grpc.SerializedObject}
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.getBytesValue = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.SerializedObject} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.SerializedObject, 5));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.SerializedObject|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.MetaDataValue} returns this
*/
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.setBytesValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.io.axoniq.axonserver.grpc.MetaDataValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.MetaDataValue} returns this
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.clearBytesValue = function() {
  return this.setBytesValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.MetaDataValue.prototype.hasBytesValue = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.ProcessingInstruction.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.ProcessingInstruction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.ProcessingInstruction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.ProcessingInstruction.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: (f = msg.getValue()) && proto.io.axoniq.axonserver.grpc.MetaDataValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.ProcessingInstruction}
 */
proto.io.axoniq.axonserver.grpc.ProcessingInstruction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.ProcessingInstruction;
  return proto.io.axoniq.axonserver.grpc.ProcessingInstruction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.ProcessingInstruction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.ProcessingInstruction}
 */
proto.io.axoniq.axonserver.grpc.ProcessingInstruction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.io.axoniq.axonserver.grpc.ProcessingKey} */ (reader.readEnum());
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.io.axoniq.axonserver.grpc.MetaDataValue;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.MetaDataValue.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.ProcessingInstruction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.ProcessingInstruction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.ProcessingInstruction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.ProcessingInstruction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.axoniq.axonserver.grpc.MetaDataValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProcessingKey key = 1;
 * @return {!proto.io.axoniq.axonserver.grpc.ProcessingKey}
 */
proto.io.axoniq.axonserver.grpc.ProcessingInstruction.prototype.getKey = function() {
  return /** @type {!proto.io.axoniq.axonserver.grpc.ProcessingKey} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.io.axoniq.axonserver.grpc.ProcessingKey} value
 * @return {!proto.io.axoniq.axonserver.grpc.ProcessingInstruction} returns this
 */
proto.io.axoniq.axonserver.grpc.ProcessingInstruction.prototype.setKey = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional MetaDataValue value = 2;
 * @return {?proto.io.axoniq.axonserver.grpc.MetaDataValue}
 */
proto.io.axoniq.axonserver.grpc.ProcessingInstruction.prototype.getValue = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.MetaDataValue} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.MetaDataValue, 2));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.MetaDataValue|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.ProcessingInstruction} returns this
*/
proto.io.axoniq.axonserver.grpc.ProcessingInstruction.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.ProcessingInstruction} returns this
 */
proto.io.axoniq.axonserver.grpc.ProcessingInstruction.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.ProcessingInstruction.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.ErrorMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.ErrorMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    location: jspb.Message.getFieldWithDefault(msg, 2, ""),
    detailsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    errorCode: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.ErrorMessage}
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.ErrorMessage;
  return proto.io.axoniq.axonserver.grpc.ErrorMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.ErrorMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.ErrorMessage}
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addDetails(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.ErrorMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.ErrorMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getErrorCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.ErrorMessage} returns this
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string location = 2;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.ErrorMessage} returns this
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string details = 3;
 * @return {!Array<string>}
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.prototype.getDetailsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.axoniq.axonserver.grpc.ErrorMessage} returns this
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.prototype.setDetailsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.axoniq.axonserver.grpc.ErrorMessage} returns this
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.prototype.addDetails = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.axoniq.axonserver.grpc.ErrorMessage} returns this
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.prototype.clearDetailsList = function() {
  return this.setDetailsList([]);
};


/**
 * optional string error_code = 4;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.prototype.getErrorCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.ErrorMessage} returns this
 */
proto.io.axoniq.axonserver.grpc.ErrorMessage.prototype.setErrorCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.FlowControl.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.FlowControl.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.FlowControl} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.FlowControl.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    permits: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.FlowControl}
 */
proto.io.axoniq.axonserver.grpc.FlowControl.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.FlowControl;
  return proto.io.axoniq.axonserver.grpc.FlowControl.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.FlowControl} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.FlowControl}
 */
proto.io.axoniq.axonserver.grpc.FlowControl.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPermits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.FlowControl.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.FlowControl.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.FlowControl} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.FlowControl.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPermits();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string client_id = 2;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.FlowControl.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.FlowControl} returns this
 */
proto.io.axoniq.axonserver.grpc.FlowControl.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 permits = 3;
 * @return {number}
 */
proto.io.axoniq.axonserver.grpc.FlowControl.prototype.getPermits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.axoniq.axonserver.grpc.FlowControl} returns this
 */
proto.io.axoniq.axonserver.grpc.FlowControl.prototype.setPermits = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.InstructionAck.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.InstructionAck.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.InstructionAck} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.InstructionAck.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    error: (f = msg.getError()) && proto.io.axoniq.axonserver.grpc.ErrorMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.InstructionAck}
 */
proto.io.axoniq.axonserver.grpc.InstructionAck.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.InstructionAck;
  return proto.io.axoniq.axonserver.grpc.InstructionAck.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.InstructionAck} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.InstructionAck}
 */
proto.io.axoniq.axonserver.grpc.InstructionAck.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstructionId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = new proto.io.axoniq.axonserver.grpc.ErrorMessage;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.ErrorMessage.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.InstructionAck.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.InstructionAck.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.InstructionAck} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.InstructionAck.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstructionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.axoniq.axonserver.grpc.ErrorMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional string instruction_id = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.InstructionAck.prototype.getInstructionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.InstructionAck} returns this
 */
proto.io.axoniq.axonserver.grpc.InstructionAck.prototype.setInstructionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.InstructionAck.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.axoniq.axonserver.grpc.InstructionAck} returns this
 */
proto.io.axoniq.axonserver.grpc.InstructionAck.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional ErrorMessage error = 3;
 * @return {?proto.io.axoniq.axonserver.grpc.ErrorMessage}
 */
proto.io.axoniq.axonserver.grpc.InstructionAck.prototype.getError = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.ErrorMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.ErrorMessage, 3));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.ErrorMessage|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.InstructionAck} returns this
*/
proto.io.axoniq.axonserver.grpc.InstructionAck.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.InstructionAck} returns this
 */
proto.io.axoniq.axonserver.grpc.InstructionAck.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.InstructionAck.prototype.hasError = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.axoniq.axonserver.grpc.InstructionResult.prototype.toObject = function(opt_includeInstance) {
  return proto.io.axoniq.axonserver.grpc.InstructionResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.axoniq.axonserver.grpc.InstructionResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.InstructionResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    instructionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    error: (f = msg.getError()) && proto.io.axoniq.axonserver.grpc.ErrorMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.axoniq.axonserver.grpc.InstructionResult}
 */
proto.io.axoniq.axonserver.grpc.InstructionResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.axoniq.axonserver.grpc.InstructionResult;
  return proto.io.axoniq.axonserver.grpc.InstructionResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.axoniq.axonserver.grpc.InstructionResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.axoniq.axonserver.grpc.InstructionResult}
 */
proto.io.axoniq.axonserver.grpc.InstructionResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstructionId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = new proto.io.axoniq.axonserver.grpc.ErrorMessage;
      reader.readMessage(value,proto.io.axoniq.axonserver.grpc.ErrorMessage.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.axoniq.axonserver.grpc.InstructionResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.axoniq.axonserver.grpc.InstructionResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.axoniq.axonserver.grpc.InstructionResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.axoniq.axonserver.grpc.InstructionResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstructionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.axoniq.axonserver.grpc.ErrorMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional string instruction_id = 1;
 * @return {string}
 */
proto.io.axoniq.axonserver.grpc.InstructionResult.prototype.getInstructionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.axoniq.axonserver.grpc.InstructionResult} returns this
 */
proto.io.axoniq.axonserver.grpc.InstructionResult.prototype.setInstructionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.InstructionResult.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.axoniq.axonserver.grpc.InstructionResult} returns this
 */
proto.io.axoniq.axonserver.grpc.InstructionResult.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional ErrorMessage error = 3;
 * @return {?proto.io.axoniq.axonserver.grpc.ErrorMessage}
 */
proto.io.axoniq.axonserver.grpc.InstructionResult.prototype.getError = function() {
  return /** @type{?proto.io.axoniq.axonserver.grpc.ErrorMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.axoniq.axonserver.grpc.ErrorMessage, 3));
};


/**
 * @param {?proto.io.axoniq.axonserver.grpc.ErrorMessage|undefined} value
 * @return {!proto.io.axoniq.axonserver.grpc.InstructionResult} returns this
*/
proto.io.axoniq.axonserver.grpc.InstructionResult.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.axoniq.axonserver.grpc.InstructionResult} returns this
 */
proto.io.axoniq.axonserver.grpc.InstructionResult.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.axoniq.axonserver.grpc.InstructionResult.prototype.hasError = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.io.axoniq.axonserver.grpc.ProcessingKey = {
  ROUTING_KEY: 0,
  PRIORITY: 1,
  TIMEOUT: 2,
  NR_OF_RESULTS: 3
};

/**
 * @enum {number}
 */
proto.io.axoniq.axonserver.grpc.TaskStatus = {
  SCHEDULED: 0,
  COMPLETED: 1,
  FAILED: 2,
  RUNNING: 3,
  CANCELLED: 4
};

goog.object.extend(exports, proto.io.axoniq.axonserver.grpc);
